{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":778,"byte_end":803,"line_start":24,"line_end":24,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"implement_uniform!(u8, 1);","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":778,"byte_end":803,"line_start":24,"line_end":24,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"implement_uniform!(u8, 1);","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(u8, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":805,"byte_end":831,"line_start":25,"line_end":25,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(u16, 2);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":805,"byte_end":831,"line_start":25,"line_end":25,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(u16, 2);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(u16, 2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":833,"byte_end":859,"line_start":26,"line_end":26,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(u32, 4);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":833,"byte_end":859,"line_start":26,"line_end":26,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(u32, 4);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(u32, 4);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":861,"byte_end":887,"line_start":27,"line_end":27,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(u64, 8);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":861,"byte_end":887,"line_start":27,"line_end":27,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(u64, 8);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(u64, 8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":889,"byte_end":917,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"implement_uniform!(u128, 16);","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":889,"byte_end":917,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"implement_uniform!(u128, 16);","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(u128, 16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":919,"byte_end":944,"line_start":29,"line_end":29,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"implement_uniform!(i8, 1);","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":919,"byte_end":944,"line_start":29,"line_end":29,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"implement_uniform!(i8, 1);","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(i8, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":946,"byte_end":972,"line_start":30,"line_end":30,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(i16, 1);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":946,"byte_end":972,"line_start":30,"line_end":30,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(i16, 1);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(i16, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":974,"byte_end":1000,"line_start":31,"line_end":31,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(i32, 1);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":974,"byte_end":1000,"line_start":31,"line_end":31,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(i32, 1);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(i32, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":1002,"byte_end":1028,"line_start":32,"line_end":32,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(i64, 1);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":1002,"byte_end":1028,"line_start":32,"line_end":32,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"implement_uniform!(i64, 1);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(i64, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":567,"byte_end":571,"line_start":15,"line_end":15,"column_start":58,"column_end":62,"is_primary":false,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":58,"highlight_end":62}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":1030,"byte_end":1057,"line_start":33,"line_end":33,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"implement_uniform!(i128, 1);","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":540,"byte_end":560,"line_start":15,"line_end":15,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"                let mut gen = RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":1030,"byte_end":1057,"line_start":33,"line_end":33,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"implement_uniform!(i128, 1);","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_uniform!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs","byte_start":259,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! implement_uniform {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform.rs:15:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_uniform!(i128, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_uniform` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":841,"byte_end":845,"line_start":23,"line_end":23,"column_start":75,"column_end":79,"is_primary":false,"text":[{"text":"                let mut gen = concrete_csprng::RandomGenerator::new(None, None);","highlight_start":75,"highlight_end":79}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":2003,"byte_end":2032,"line_start":53,"line_end":53,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"implement_gaussian!(f32, i32);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_gaussian!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":486,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! implement_gaussian {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":797,"byte_end":834,"line_start":23,"line_end":23,"column_start":31,"column_end":68,"is_primary":true,"text":[{"text":"                let mut gen = concrete_csprng::RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":2003,"byte_end":2032,"line_start":53,"line_end":53,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"implement_gaussian!(f32, i32);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_gaussian!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":486,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! implement_gaussian {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs:23:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = concrete_csprng::RandomGenerator::new(None, Non\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_gaussian!(f32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_gaussian` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":841,"byte_end":845,"line_start":23,"line_end":23,"column_start":75,"column_end":79,"is_primary":false,"text":[{"text":"                let mut gen = concrete_csprng::RandomGenerator::new(None, None);","highlight_start":75,"highlight_end":79}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":2034,"byte_end":2063,"line_start":54,"line_end":54,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"implement_gaussian!(f64, i64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_gaussian!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":486,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! implement_gaussian {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":797,"byte_end":834,"line_start":23,"line_end":23,"column_start":31,"column_end":68,"is_primary":true,"text":[{"text":"                let mut gen = concrete_csprng::RandomGenerator::new(None, None);","highlight_start":31,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":2034,"byte_end":2063,"line_start":54,"line_end":54,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"implement_gaussian!(f64, i64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"implement_gaussian!","def_site_span":{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs","byte_start":486,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! implement_gaussian {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/gaussian.rs:23:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut gen = concrete_csprng::RandomGenerator::new(None, Non\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimplement_gaussian!(f64, i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `implement_gaussian` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform_boolean.rs","byte_start":382,"byte_end":386,"line_start":12,"line_end":12,"column_start":50,"column_end":54,"is_primary":false,"text":[{"text":"        let mut gen = RandomGenerator::new(None, None);","highlight_start":50,"highlight_end":54}],"label":"unexpected argument of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform_boolean.rs","byte_start":355,"byte_end":375,"line_start":12,"line_end":12,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"        let mut gen = RandomGenerator::new(None, None);","highlight_start":23,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(seed: Option<u128>) -> RandomGenerator {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform_boolean.rs","byte_start":380,"byte_end":386,"line_start":12,"line_end":12,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        let mut gen = RandomGenerator::new(None, None);","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 2 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-core-0.1.8/src/math/random/uniform_boolean.rs:12:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut gen = RandomGenerator::new(None, None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument of type `std::option::Option<_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/mukund/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concrete-csprng-0.1.7/src/lib.rs:40:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(seed: Option<u128>) -> RandomGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 13 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 13 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}
